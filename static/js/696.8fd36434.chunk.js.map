{"version":3,"file":"static/js/696.8fd36434.chunk.js","mappings":"sPAEaA,EAAOC,EAAAA,GAAAA,GAAH,iKAQJC,EAAQD,EAAAA,GAAAA,IAAH,uEAKLE,EAAOF,EAAAA,GAAAA,EAAH,mHAQJG,EAAYH,EAAAA,GAAAA,EAAH,yF,SCLtB,EAfsB,SAAC,GAAiD,IAAD,IAA9CI,KAAQC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,aAChD,OACEA,IACE,UAACR,EAAD,YACE,SAACE,EAAD,CACEO,IAAG,wCAAmCD,GACtCE,IAAKJ,KAEP,SAACH,EAAD,UAAOG,KACP,UAACF,EAAD,yBAAuBG,OAI9B,E,+DCdYI,EAAOV,EAAAA,GAAAA,GAAH,4KC6BjB,EAzBkB,WAChB,IAAQW,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAaL,GAFxC,OAEUM,EAFV,OAGIH,EAAQG,EAASC,KAAKd,MAH1B,wGADc,uBAAC,WAAD,wBAOde,EACD,GAAE,CAACR,KAGF,+BACE,SAACD,EAAD,UACGN,EAAKgB,KAAI,SAAAC,GACR,OAAO,SAAC,EAAD,CAAgCjB,KAAMiB,GAAlBA,EAAGC,QAC/B,OAIR,C,+LC3BKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sCAAyCD,IADlC,cACxBN,EADwB,yBAEvBA,EAASC,KAAKQ,SAFS,2CAAH,qDAKhBC,EAAW,mCAAG,WAAMhB,GAAN,uFACFa,EAAAA,EAAAA,IAAA,iBACXb,EADW,oBACGY,EADH,oBADE,cACnBN,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOXD,EAAY,mCAAG,WAAML,GAAN,uFACHa,EAAAA,EAAAA,IAAA,iBACXb,EADW,4BACWY,EADX,oBADG,cACpBN,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZW,EAAe,mCAAG,WAAMjB,GAAN,uFACNa,EAAAA,EAAAA,IAAA,iBACXb,EADW,4BACWY,EADX,2BADM,cACvBN,EADuB,yBAItBA,GAJsB,2CAAH,sDAOfY,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,gCACID,EADJ,iCACoCO,EADpC,gCADQ,cACzBb,EADyB,yBAIxBA,GAJwB,2CAAH,qD","sources":["components/MovieInfo/MovieCast/MovieCastItem/MovieCastItem.styled.jsx","components/MovieInfo/MovieCast/MovieCastItem/MovieCastItem.js","components/MovieInfo/MovieCast/MovieCast.styled.jsx","components/MovieInfo/MovieCast/MovieCast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n  padding: 5px;\n`;\nexport const Image = styled.img`\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.p`\n  letter-spacing: 3px;\n\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Character = styled.p`\n  letter-spacing: 1px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n","import { Item, Image, Name, Character } from './MovieCastItem.styled';\n\nimport PropTypes from 'prop-types';\nconst MovieCastItem = ({ cast: { name, character, profile_path } }) => {\n  return (\n    profile_path && (\n      <Item>\n        <Image\n          src={`http://image.tmdb.org/t/p/w185${profile_path}`}\n          alt={name}\n        ></Image>\n        <Name>{name}</Name>\n        <Character>Character: {character}</Character>\n      </Item>\n    )\n  );\n};\n\nexport default MovieCastItem;\n\nMovieCastItem.propTypes = {\n  cast: PropTypes.object,\n  name: PropTypes.string,\n  character: PropTypes.string,\n  profile_path: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(1, 1fr);\n  grid-column-gap: 10px;\n  grid-row-gap: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/api';\nimport MovieCastItem from './MovieCastItem/MovieCastItem';\nimport { List } from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const { id } = useParams();\n\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    async function fetchMovieCast() {\n      try {\n        const response = await getMovieCast(id);\n        setCast(response.data.cast);\n      } catch (error) {}\n    }\n    fetchMovieCast();\n  }, [id]);\n\n  return (\n    <>\n      <List>\n        {cast.map(el => {\n          return <MovieCastItem key={el.cast_id} cast={el}></MovieCastItem>;\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst API_KEY = 'a2e09a9932668fabc233f9c3d63a2fc0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getFilmById = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response;\n};\n\nexport const getSearchingMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response;\n};\n"],"names":["Item","styled","Image","Name","Character","cast","name","character","profile_path","src","alt","List","id","useParams","useState","setCast","useEffect","getMovieCast","response","data","fetchMovieCast","map","el","cast_id","API_KEY","axios","getTrendingFilms","results","getFilmById","getMovieReviews","getSearchingMovie","query"],"sourceRoot":""}