{"version":3,"file":"static/js/257.fdb1208d.chunk.js","mappings":"gNAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oT,SCSjB,EARmB,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,CAAMO,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA1C,UACE,wBAAKD,KAGV,ECTYM,EAAOT,EAAAA,GAAAA,GAAH,gKCWjB,EAVmB,SAAC,GAAe,IAAbU,EAAY,EAAZA,MACpB,OACE,SAACD,EAAD,UACGC,EAAMC,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,SAAC,EAAD,CAAqBD,GAAIA,EAAIC,MAAOA,GAAnBD,EADR,KAKhB,C,4JCTYU,EAAOZ,EAAAA,GAAAA,KAAH,8FAMJa,EAAQb,EAAAA,GAAAA,MAAH,wLAWLc,EAASd,EAAAA,GAAAA,OAAH,4O,SCPnB,EAToB,SAAC,GAAkB,IAAhBe,EAAe,EAAfA,SACrB,OACE,UAACH,EAAD,CAAMG,SAAUA,EAAhB,WACE,SAACF,EAAD,CAAOG,KAAK,SAASC,KAAK,eAC1B,SAACH,EAAD,CAAQE,KAAK,SAAb,sBAGL,E,SC8BD,EAhCe,WAAO,IAAD,EACnB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOR,EAAP,KAAcS,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,IAErDC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,uGAGYC,EAAAA,EAAAA,IAAkBH,GAH9B,gBAEYI,EAFZ,EAEIC,KAAQD,QAEVR,EAASQ,GAJX,4CAHc,sBACM,KAAhBJ,GADU,mCASdM,EACD,GAAE,CAACN,IASJ,OACE,6BACE,SAAC,EAAD,CAAaR,SATI,SAAAe,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfX,EAAgB,CAAEY,UAAWF,EAAKG,SAASD,UAAUE,QACrDJ,EAAKK,OACN,IAKI3B,IAAS,SAAC4B,EAAA,EAAD,CAAY5B,MAAOA,MAGlC,C,+LCpCK6B,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sCAAyCD,IADlC,cACxBG,EADwB,yBAEvBA,EAASd,KAAKD,SAFS,2CAAH,qDAKhBgB,EAAW,mCAAG,WAAMzC,GAAN,uFACFsC,EAAAA,EAAAA,IAAA,iBACXtC,EADW,oBACGqC,EADH,oBADE,cACnBG,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOXE,EAAY,mCAAG,WAAM1C,GAAN,uFACHsC,EAAAA,EAAAA,IAAA,iBACXtC,EADW,4BACWqC,EADX,oBADG,cACpBG,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZG,EAAe,mCAAG,WAAM3C,GAAN,uFACNsC,EAAAA,EAAAA,IAAA,iBACXtC,EADW,4BACWqC,EADX,2BADM,cACvBG,EADuB,yBAItBA,GAJsB,2CAAH,sDAOfhB,EAAiB,mCAAG,WAAMoB,GAAN,uFACRN,EAAAA,EAAAA,IAAA,gCACID,EADJ,iCACoCO,EADpC,gCADQ,cACzBJ,EADyB,yBAIxBA,GAJwB,2CAAH,qD","sources":["components/MoviesList/MoviesItem/MoviesItem.styled.jsx","components/MoviesList/MoviesItem/MoviesItem.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","components/SearchFilms/SearchFilms.styled.jsx","components/SearchFilms/SearchFilms.js","pages/Movies.js","services/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  background-color: #f9ff3c;\n  width: 300px;\n  text-align: center;\n  padding: 7px;\n  border-radius: 10px;\n  text-decoration: none;\n  color: black;\n  font-size: 16px;\n  &:hover {\n    box-shadow: 0px 5px 20px black;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from './MoviesItem.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesItem = ({ id, title }) => {\n  const location = useLocation();\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <li>{title}</li>\n    </Link>\n  );\n};\nexport default MoviesItem;\n\nMoviesItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  padding: 10px;\n`;\n","import MoviesItem from './MoviesItem/MoviesItem';\nimport { List } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nconst MoviesList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title }) => (\n        <MoviesItem key={id} id={id} title={title}></MoviesItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  outline: none;\n  border: none;\n  width: 300px;\n  padding: 7px;\n  height: 30px;\n  border-radius: 20px;\n  margin-right: 10px;\n  background-color: #fff;\n`;\n\nexport const Button = styled.button`\n  background-color: #fff;\n  border: none;\n  width: 100px;\n  height: 30px;\n  font-weight: 700;\n  border-radius: 20px;\n\n  &:hover {\n    box-shadow: 0px 5px 20px black;\n    background-color: #f9ff3c;\n  }\n`;\n","import { Form, Input, Button } from './SearchFilms.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchFilms = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input type=\"search\" name=\"quaryName\"></Input>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchFilms;\n\nSearchFilms.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { MoviesList } from 'components/MoviesList';\nimport SearchFilms from '../components/SearchFilms';\n\nimport { getSearchingMovie } from 'services/api';\n\nconst Movies = () => {\n  const [films, setFilms] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const productName = searchParams.get('quaryName') ?? '';\n\n  useEffect(() => {\n    if (productName === '') return;\n\n    async function fetchMovies() {\n      const {\n        data: { results },\n      } = await getSearchingMovie(productName);\n      setFilms(results);\n    }\n    fetchMovies();\n  }, [productName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ quaryName: form.elements.quaryName.value });\n    form.reset();\n  };\n\n  return (\n    <main>\n      <SearchFilms onSubmit={handleSubmit}></SearchFilms>\n      {films && <MoviesList films={films}></MoviesList>}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'a2e09a9932668fabc233f9c3d63a2fc0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getFilmById = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response;\n};\n\nexport const getSearchingMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response;\n};\n"],"names":["Link","styled","NavLink","id","title","location","useLocation","to","state","from","List","films","map","Form","Input","Button","onSubmit","type","name","useState","setFilms","useSearchParams","searchParams","setSearchParams","productName","get","useEffect","getSearchingMovie","results","data","fetchMovies","e","preventDefault","form","currentTarget","quaryName","elements","value","reset","MoviesList","API_KEY","axios","getTrendingFilms","response","getFilmById","getMovieCast","getMovieReviews","query"],"sourceRoot":""}