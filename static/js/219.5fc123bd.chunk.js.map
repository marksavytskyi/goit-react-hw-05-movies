{"version":3,"file":"static/js/219.5fc123bd.chunk.js","mappings":"gRAEaA,EAAOC,EAAAA,GAAAA,GAAH,gDAGJC,EAAOD,EAAAA,GAAAA,GAAH,oJAQJE,EAASF,EAAAA,GAAAA,GAAH,wEAING,EAAUH,EAAAA,GAAAA,EAAH,sB,SCwBpB,EApCqB,WACnB,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAIcC,EAAAA,EAAAA,IAAgBN,GAJ9B,gBAGcG,EAHd,EAGMI,KAAQJ,QAEVC,EAAWD,GALf,0GADc,uBAAC,WAAD,wBAUdK,EACD,GAAE,CAACR,KAEF,8BACGG,EAAQM,QACP,SAACd,EAAD,UACGQ,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASZ,EAAS,EAATA,GAC/B,OACE,UAACH,EAAD,YACE,UAACC,EAAD,sBAAiBa,MACjB,SAACZ,EAAD,UAAUa,MAFDZ,EAKd,OAGH,oDAIP,C,+LCrCKa,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sCAAyCD,IADlC,cACxBG,EADwB,yBAEvBA,EAAST,KAAKJ,SAFS,2CAAH,qDAKhBc,EAAW,mCAAG,WAAMjB,GAAN,uFACFc,EAAAA,EAAAA,IAAA,iBACXd,EADW,oBACGa,EADH,oBADE,cACnBG,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOXE,EAAY,mCAAG,WAAMlB,GAAN,uFACHc,EAAAA,EAAAA,IAAA,iBACXd,EADW,4BACWa,EADX,oBADG,cACpBG,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZV,EAAe,mCAAG,WAAMN,GAAN,uFACNc,EAAAA,EAAAA,IAAA,iBACXd,EADW,4BACWa,EADX,2BADM,cACvBG,EADuB,yBAItBA,GAJsB,2CAAH,sDAOfG,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,gCACID,EADJ,iCACoCO,EADpC,gCADQ,cACzBJ,EADyB,yBAIxBA,GAJwB,2CAAH,qD","sources":["components/MovieInfo/MovieReviews/MovieReviews.styled.jsx","components/MovieInfo/MovieReviews/MovieReviews.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-bottom: 50px;\n`;\nexport const Item = styled.li`\n  padding: 20px;\n  border: 1px solid white;\n  border-radius: 5px;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const Author = styled.h3`\n  margin-bottom: 20px;\n  letter-spacing: 1px;\n`;\nexport const Content = styled.p``;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { List, Item, Author, Content } from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const { id } = useParams();\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const {\n          data: { results },\n        } = await getMovieReviews(id);\n        setResults(results);\n      } catch (error) {}\n    }\n\n    fetchMovieReviews();\n  }, [id]);\n  return (\n    <>\n      {results.length ? (\n        <List>\n          {results.map(({ author, content, id }) => {\n            return (\n              <Item key={id}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <h2>Don`t have any reviews</h2>\n      )}\n    </>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a2e09a9932668fabc233f9c3d63a2fc0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getFilmById = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response;\n};\n\nexport const getSearchingMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response;\n};\n"],"names":["List","styled","Item","Author","Content","id","useParams","useState","results","setResults","useEffect","getMovieReviews","data","fetchMovieReviews","length","map","author","content","API_KEY","axios","getTrendingFilms","response","getFilmById","getMovieCast","getSearchingMovie","query"],"sourceRoot":""}